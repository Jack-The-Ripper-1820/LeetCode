class Solution {
    set<vector<int>> ans;
    
    void helper(vector<int> const& nums, int ind, vector<int> tmp) {
        ans.insert(tmp);
        
        if(ind >= nums.size())
            return;
        
        for(int i = ind; i < nums.size(); i++) {
            tmp.push_back(nums[i]);
            
            helper(nums, i + 1, tmp);
            
            tmp.pop_back();
        }
    }
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        
        helper(nums, 0, {});
        
        return vector<vector<int>>(ans.begin(), ans.end());
    }
};
