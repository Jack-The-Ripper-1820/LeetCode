//c++
class Solution {
public:
    int numberOfArithmeticSlices(vector<int>& A) {
        if(A.size() < 3)
            return 0;

        int d = A[1] - A[0], ans = 0, t = 1;
        for(int i = 2; i < A.size(); i++) {
            int cur = A[i] - A[i - 1];
            if(cur == d) {
                ans += t;
                t += 1;
            }
            else {
                t = 1;
                d = cur;
            }
        }
        return ans;
    }
};

#python
class Solution:
    def numberOfArithmeticSlices(self, nums: List[int]) -> int:
        n = len(nums)
        if(n < 3):
            return 0
        
        ans = 0
        diff = nums[1] - nums[0]
        dp = [0] * n
        c = 2

        for i in range(2, n):
            cur = nums[i] - nums[i - 1]
            c += 1
            
            if(cur == diff and c >= 3):        
                dp[i] = dp[i - 1] + 1
            
            else:
                diff = cur
                c = 2
            
            ans += dp[i]
        
        return ans
