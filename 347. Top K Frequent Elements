class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        priority_queue<pair<int, int>> pq;
        unordered_map<int, int> mp;
        for(int &x : nums)
            mp[x]++;
        
        auto i = mp.begin();
        while(i != mp.end()) {
            pq.push(make_pair(i->second, i->first));
            i++;
        }
        
        vector<int> ans;
        for(int i = 0; i < k; i++) {
            ans.push_back(pq.top().second);
            pq.pop();
        }
        return ans;
    }
};
