class Solution {
    vector<vector<int>> ret;
    vector<int> tmp;
    
    void helper(vector<int> const& candidates, int const& target, int ind, int s) {
        if(ind >= candidates.size()) {
            if(target == s)
                ret.push_back(tmp);
            return;
        }
        
        if(s + candidates[ind] <= target) {
            tmp.push_back(candidates[ind]);
            helper(candidates, target, ind, s + candidates[ind]);
            tmp.pop_back();
        }
        
        helper(candidates, target, ind + 1, s);
    }
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        helper(candidates, target, 0, 0);
        return ret;
    }
};
