/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    TreeNode* helper(vector<int> const& nums, int l, int r) {
        TreeNode *root = nullptr;
        
        if(l <= r) {
            int mid = (l + r) >> 1;
            
            root = new TreeNode(nums[mid]);
            root->left = helper(nums, l, mid - 1);
            root->right = helper(nums, mid + 1, r);
        }
        
        return root;
    }
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return helper(nums, 0, nums.size() - 1);
    }
};
