class Solution {
public:
    int maxArea(int h, int w, vector<int>& horizontalCuts, vector<int>& verticalCuts) {
        long hmin = 0, vmin = 0;
        int mod = 1e9 + 7;
        
        horizontalCuts.push_back(h);
        verticalCuts.push_back(w);
        
        sort(horizontalCuts.begin(), horizontalCuts.end());
        sort(verticalCuts.begin(), verticalCuts.end());
        
        long maxV = 0, maxH = 0;
        
        for(int j = 0; j < verticalCuts.size(); j++) {
            maxV = max(maxV, (verticalCuts[j] - vmin));
            vmin = verticalCuts[j];
        }
        
        for(int i = 0; i < horizontalCuts.size(); i++) {
            maxH = max(maxH, (horizontalCuts[i] - hmin));
            hmin = horizontalCuts[i];
        }
        
        return (maxV * maxH) % mod;
    }
};
