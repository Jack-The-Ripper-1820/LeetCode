//ignore string names big and small, the names signify nothing just the two input strings, names came from prior unsuccesful attempt, which was modified for correct answer
class Solution {
    
public:
    int helper(string const& big, string const& small, int sind, int bind, vector<vector<int>> &dp) {
        if(sind == small.length() || bind == big.length())
            return 0;
        if(dp[sind][bind] != INT_MIN)
            return dp[sind][bind];
        if(small[sind] == big[bind])
            return dp[sind][bind] = 1 + helper(big, small, sind + 1, bind + 1, dp);
        return dp[sind][bind] = max(helper(big, small, sind, bind + 1, dp), helper(big, small, sind + 1, bind, dp));
    }
    int longestCommonSubsequence(string text1, string text2) {
        vector<vector<int>> dp(text2.length(), vector<int>(text1.length(), INT_MIN));
        return helper(text1, text2, 0, 0, dp);
    }
};
