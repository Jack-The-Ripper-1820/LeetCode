class Solution {
    vector<bool> vis;
    
    bool helper(vector<int> const& arr, int ind, int s, int const& tot, int div) {
        if(div == 1)
            return true;
        
        if(s == tot)
            return helper(arr, 0, 0, tot, div - 1);
        
        for(int i = ind; i < arr.size(); i++) {
            if(vis[i] or arr[i] + s > tot) continue;
            
            vis[i] = true;
            if(helper(arr, i + 1, s + arr[i], tot, div)) return true;
            vis[i] = false;
        }
        
        return false;
    }
public:
    bool makesquare(vector<int>& matchsticks) {
        int tot = accumulate(matchsticks.begin(), matchsticks.end(), 0);
        
        if(matchsticks.size() < 4 or tot % 4)
            return false;
        
        tot /= 4;
        vis.resize(matchsticks.size(), false);
        
        return helper(matchsticks, 0, 0, tot, 4);
    }
};
