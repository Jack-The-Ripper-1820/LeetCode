class Solution {
    double INF = 1e9 + 7;
    
    double slope(vector<int> const& a, vector<int> const& b) {
        double dy = b[1] - a[1];
        double dx = b[0] - a[0];
        
        return not dx ? INF : dy / dx; 
    }
public:
    int maxPoints(vector<vector<int>>& points) {
        int n = points.size(), ans = 0;
        unordered_map<double, int> mp;
        
        for(int i = 0; i < n; i++) {
            auto cur = points[i];
            int same = 0;
            vector<double> angles;
            mp.clear();
            
            for(int j = i + 1; j < n; j++) {
                auto next = points[j];

                cur == next ? same += 1 : (angles.push_back(slope(cur, next)), mp[angles.back()]++);
            }
            
            int maxslopes = 0;
            
            for(auto &x : mp)
                maxslopes = max(maxslopes, x.second);
            
            ans = max(ans, maxslopes + same + 1);
        }
        
        return ans;
    }
};
