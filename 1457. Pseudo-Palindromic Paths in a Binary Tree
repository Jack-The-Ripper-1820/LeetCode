/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int ans = 0;
    
    void helper(TreeNode* root, unordered_map<int, int> &mp) {
        if(not root->left and not root->right) {
            mp[root->val]++;
            int odds = 0;
            for(auto &x : mp)
                odds += (x.second % 2);
            
            ans += (odds <= 1);
            mp[root->val]--;
            return;
        }
        
        mp[root->val]++;
        
        if(root->left) helper(root->left, mp);
        if(root->right) helper(root->right, mp);
        
        mp[root->val]--;
    }
public:
    int pseudoPalindromicPaths (TreeNode* root) {
        if(not root) return 0;
        unordered_map<int, int> mp;
        helper(root, mp);
        return ans;
    }
};
